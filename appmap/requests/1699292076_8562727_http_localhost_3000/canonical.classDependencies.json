[
  {
    "caller": "GET /",
    "callee": "SELECT \"schema_migrations\".\"version\" FROM \"schema_migrations\" ORDER BY \"schema_migrations\".\"version\" ASC"
  },
  {
    "caller": "GET /",
    "callee": "SELECT a.attname, format_type(a.atttypid, a.atttypmod),\n       pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod,\n       c.collname, col_description(a.attrelid, a.attnum) AS comment,\n       a.attidentity AS identity,\n       attgenerated as attgenerated\n  FROM pg_attribute a\n  LEFT JOIN pg_attrdef d ON a.attrelid = d.adrelid AND a.attnum = d.adnum\n  LEFT JOIN pg_type t ON a.atttypid = t.oid\n  LEFT JOIN pg_collation c ON a.attcollation = c.oid AND a.attcollation <> t.typcollation\n WHERE a.attrelid = '\"ip_blocks\"'::regclass\n   AND a.attnum > 0 AND NOT a.attisdropped\n ORDER BY a.attnum\n"
  },
  {
    "caller": "GET /",
    "callee": "SELECT c.relname FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE n.nspname = ANY (current_schemas(false)) AND c.relkind IN ('r','v','m','p','f')"
  },
  {
    "caller": "GET /",
    "callee": "SELECT c.relname FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE n.nspname = ANY (current_schemas(false)) AND c.relname = 'ar_internal_metadata' AND c.relkind IN ('r','p')"
  },
  {
    "caller": "GET /",
    "callee": "SELECT c.relname FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE n.nspname = ANY (current_schemas(false)) AND c.relname = 'schema_migrations' AND c.relkind IN ('r','p')"
  },
  {
    "caller": "GET /",
    "callee": "SELECT t.oid, t.typname, t.typelem, t.typdelim, t.typinput, r.rngsubtype, t.typtype, t.typbasetype\nFROM pg_type as t\nLEFT JOIN pg_range as r ON oid = rngtypid\nWHERE\n  t.typelem IN (16, 17, 18, 19, 20, 21, 23, 25, 26, 114, 142, 600, 601, 602, 603, 604, 628, 700, 701, 718, 790, 829, 869, 650, 1042, 1043, 1082, 1083, 1114, 1184, 1186, 1560, 1562, 1700, 2950, 3614, 3802, 13425, 13428, 13430, 13436, 13438, 3904, 3906, 3908, 3910, 3912, 3926)\n"
  },
  {
    "caller": "GET /",
    "callee": "SELECT t.oid, t.typname, t.typelem, t.typdelim, t.typinput, r.rngsubtype, t.typtype, t.typbasetype\nFROM pg_type as t\nLEFT JOIN pg_range as r ON oid = rngtypid\nWHERE\n  t.typname IN ('int2', 'int4', 'int8', 'oid', 'float4', 'float8', 'text', 'varchar', 'char', 'name', 'bpchar', 'bool', 'bit', 'varbit', 'date', 'money', 'bytea', 'point', 'hstore', 'json', 'jsonb', 'cidr', 'inet', 'uuid', 'xml', 'tsvector', 'macaddr', 'citext', 'ltree', 'line', 'lseg', 'box', 'path', 'polygon', 'circle', 'numeric', 'interval', 'time', 'timestamp', 'timestamptz')\n"
  },
  {
    "caller": "GET /",
    "callee": "SELECT t.oid, t.typname, t.typelem, t.typdelim, t.typinput, r.rngsubtype, t.typtype, t.typbasetype\nFROM pg_type as t\nLEFT JOIN pg_range as r ON oid = rngtypid\nWHERE\n  t.typtype IN ('r', 'e', 'd')\n"
  },
  {
    "caller": "GET /",
    "callee": "SELECT t.oid, t.typname\nFROM pg_type as t\nWHERE t.typname IN ('int2', 'int4', 'int8', 'oid', 'float4', 'float8', 'numeric', 'bool', 'timestamp', 'timestamptz')\n"
  },
  {
    "caller": "GET /",
    "callee": "SET SESSION timezone TO 'UTC'"
  },
  {
    "caller": "GET /",
    "callee": "SET client_min_messages TO 'warning'"
  },
  {
    "caller": "GET /",
    "callee": "SET intervalstyle = iso_8601"
  },
  {
    "caller": "GET /",
    "callee": "SET standard_conforming_strings = on"
  },
  {
    "caller": "GET /",
    "callee": "SHOW max_identifier_length"
  },
  {
    "caller": "GET /",
    "callee": "activesupport/ActiveSupport"
  },
  {
    "caller": "GET /",
    "callee": "app/controllers"
  },
  {
    "caller": "GET /",
    "callee": "app/models"
  },
  {
    "caller": "GET /",
    "callee": "lib/chewy"
  },
  {
    "caller": "GET /",
    "callee": "logger/Logger"
  },
  {
    "caller": "GET /",
    "callee": "ruby/String"
  },
  {
    "caller": "actionpack/ActionDispatch",
    "callee": "openssl/OpenSSL"
  },
  {
    "caller": "activesupport/ActiveSupport",
    "callee": "app/controllers"
  },
  {
    "caller": "app/controllers",
    "callee": "actionpack/ActionDispatch"
  },
  {
    "caller": "app/controllers",
    "callee": "actionview/ActionView"
  },
  {
    "caller": "app/controllers",
    "callee": "activesupport/ActiveSupport"
  },
  {
    "caller": "app/controllers",
    "callee": "app/helpers"
  },
  {
    "caller": "app/controllers",
    "callee": "app/lib"
  },
  {
    "caller": "app/controllers",
    "callee": "app/models"
  },
  {
    "caller": "app/controllers",
    "callee": "app/views"
  },
  {
    "caller": "app/controllers",
    "callee": "openssl/OpenSSL"
  },
  {
    "caller": "app/helpers",
    "callee": "activesupport/ActiveSupport"
  },
  {
    "caller": "app/helpers",
    "callee": "app/controllers"
  },
  {
    "caller": "app/helpers",
    "callee": "app/models"
  },
  {
    "caller": "app/helpers",
    "callee": "app/presenters"
  },
  {
    "caller": "app/helpers",
    "callee": "app/serializers"
  },
  {
    "caller": "app/helpers",
    "callee": "inline_template.render"
  },
  {
    "caller": "app/helpers",
    "callee": "json/JSON"
  },
  {
    "caller": "app/models",
    "callee": "SELECT \"ip_blocks\".\"ip\" FROM \"ip_blocks\" WHERE \"ip_blocks\".\"severity\" = $1"
  },
  {
    "caller": "app/models",
    "callee": "SELECT \"settings\".* FROM \"settings\" WHERE (thing_type is NULL and thing_id is NULL) AND \"settings\".\"var\" = $1 ORDER BY \"settings\".\"id\" ASC LIMIT $2"
  },
  {
    "caller": "app/models",
    "callee": "SELECT a.attname\n  FROM (\n         SELECT indrelid, indkey, generate_subscripts(indkey, 1) idx\n           FROM pg_index\n          WHERE indrelid = '\"settings\"'::regclass\n            AND indisprimary\n       ) i\n  JOIN pg_attribute a\n    ON a.attrelid = i.indrelid\n   AND a.attnum = i.indkey[i.idx]\n ORDER BY i.idx\n"
  },
  {
    "caller": "app/models",
    "callee": "SHOW search_path"
  },
  {
    "caller": "app/models",
    "callee": "activesupport/ActiveSupport"
  },
  {
    "caller": "app/models",
    "callee": "app/lib"
  },
  {
    "caller": "app/models",
    "callee": "logger/Logger"
  },
  {
    "caller": "app/models",
    "callee": "psych/Psych"
  },
  {
    "caller": "app/models",
    "callee": "ruby/ERB"
  },
  {
    "caller": "app/models",
    "callee": "ruby/Marshal"
  },
  {
    "caller": "app/presenters",
    "callee": "SELECT \"site_uploads\".* FROM \"site_uploads\" WHERE \"site_uploads\".\"var\" = $1 LIMIT $2"
  },
  {
    "caller": "app/presenters",
    "callee": "SELECT a.attname, format_type(a.atttypid, a.atttypmod),\n       pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod,\n       c.collname, col_description(a.attrelid, a.attnum) AS comment,\n       a.attidentity AS identity,\n       attgenerated as attgenerated\n  FROM pg_attribute a\n  LEFT JOIN pg_attrdef d ON a.attrelid = d.adrelid AND a.attnum = d.adnum\n  LEFT JOIN pg_type t ON a.atttypid = t.oid\n  LEFT JOIN pg_collation c ON a.attcollation = c.oid AND a.attcollation <> t.typcollation\n WHERE a.attrelid = '\"settings\"'::regclass\n   AND a.attnum > 0 AND NOT a.attisdropped\n ORDER BY a.attnum\n"
  },
  {
    "caller": "app/presenters",
    "callee": "SELECT a.attname, format_type(a.atttypid, a.atttypmod),\n       pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod,\n       c.collname, col_description(a.attrelid, a.attnum) AS comment,\n       a.attidentity AS identity,\n       attgenerated as attgenerated\n  FROM pg_attribute a\n  LEFT JOIN pg_attrdef d ON a.attrelid = d.adrelid AND a.attnum = d.adnum\n  LEFT JOIN pg_type t ON a.atttypid = t.oid\n  LEFT JOIN pg_collation c ON a.attcollation = c.oid AND a.attcollation <> t.typcollation\n WHERE a.attrelid = '\"site_uploads\"'::regclass\n   AND a.attnum > 0 AND NOT a.attisdropped\n ORDER BY a.attnum\n"
  },
  {
    "caller": "app/presenters",
    "callee": "app/models"
  },
  {
    "caller": "app/presenters",
    "callee": "lib/mastodon"
  },
  {
    "caller": "app/presenters",
    "callee": "logger/Logger"
  },
  {
    "caller": "app/presenters",
    "callee": "ruby/Kernel"
  },
  {
    "caller": "app/presenters",
    "callee": "ruby/Marshal"
  },
  {
    "caller": "app/serializers",
    "callee": "SELECT a.attname, format_type(a.atttypid, a.atttypmod),\n       pg_get_expr(d.adbin, d.adrelid), a.attnotnull, a.atttypid, a.atttypmod,\n       c.collname, col_description(a.attrelid, a.attnum) AS comment,\n       a.attidentity AS identity,\n       attgenerated as attgenerated\n  FROM pg_attribute a\n  LEFT JOIN pg_attrdef d ON a.attrelid = d.adrelid AND a.attnum = d.adnum\n  LEFT JOIN pg_type t ON a.atttypid = t.oid\n  LEFT JOIN pg_collation c ON a.attcollation = c.oid AND a.attcollation <> t.typcollation\n WHERE a.attrelid = '\"media_attachments\"'::regclass\n   AND a.attnum > 0 AND NOT a.attisdropped\n ORDER BY a.attnum\n"
  },
  {
    "caller": "app/serializers",
    "callee": "app/models"
  },
  {
    "caller": "app/serializers",
    "callee": "app/presenters"
  },
  {
    "caller": "app/serializers",
    "callee": "lib/chewy"
  },
  {
    "caller": "app/serializers",
    "callee": "lib/mastodon"
  },
  {
    "caller": "app/serializers",
    "callee": "ruby/Kernel"
  },
  {
    "caller": "app/views",
    "callee": "actionview/ActionView"
  },
  {
    "caller": "app/views",
    "callee": "app/controllers"
  },
  {
    "caller": "app/views",
    "callee": "app/helpers"
  },
  {
    "caller": "app/views",
    "callee": "app/presenters"
  },
  {
    "caller": "app/views",
    "callee": "inline_template.render"
  },
  {
    "caller": "app/views",
    "callee": "lib/webpacker"
  },
  {
    "caller": "app/views",
    "callee": "logger/Logger"
  },
  {
    "caller": "app/views",
    "callee": "ruby/Array"
  },
  {
    "caller": "app/views",
    "callee": "ruby/Kernel"
  },
  {
    "caller": "inline_template.render",
    "callee": "app/views"
  },
  {
    "caller": "inline_template.render",
    "callee": "logger/Logger"
  },
  {
    "caller": "lib/chewy",
    "callee": "app/lib"
  },
  {
    "caller": "lib/webpacker",
    "callee": "json/JSON"
  },
  {
    "caller": "lib/webpacker",
    "callee": "logger/Logger"
  },
  {
    "caller": "ruby/ERB",
    "callee": "ruby/Kernel"
  }
]